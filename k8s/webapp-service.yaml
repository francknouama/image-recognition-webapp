apiVersion: v1
kind: Service
metadata:
  name: webapp-service
  labels:
    app: image-recognition-webapp
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-name: "image-recognition-lb"
    service.beta.kubernetes.io/do-loadbalancer-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-algorithm: "round_robin"
    service.beta.kubernetes.io/do-loadbalancer-size-slug: "lb-small"
    service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: "true"
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "false"
    service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-type: "cookies"
    service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-cookie-name: "webapp-session"
    service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-cookie-ttl: "300"
spec:
  type: LoadBalancer
  sessionAffinity: None
  selector:
    app: image-recognition-webapp
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
  - name: https
    protocol: TCP
    port: 443
    targetPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service-internal
  labels:
    app: image-recognition-webapp
spec:
  type: ClusterIP
  selector:
    app: image-recognition-webapp
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
  - name: metrics
    protocol: TCP
    port: 9090
    targetPort: 9090

---
# Headless service for StatefulSet-like behavior if needed
apiVersion: v1
kind: Service
metadata:
  name: webapp-headless
  labels:
    app: image-recognition-webapp
spec:
  clusterIP: None
  selector:
    app: image-recognition-webapp
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080