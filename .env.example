# Environment Configuration Example
# Copy this file to .env and update the values

# Application Environment
GO_ENV=development
ENVIRONMENT=development

# Server Configuration
PORT=8080
METRICS_PORT=9090
READ_TIMEOUT=30
WRITE_TIMEOUT=30
IDLE_TIMEOUT=120
MAX_HEADER_BYTES=1048576

# Application Settings
MAX_UPLOAD_SIZE=10MB
TIMEOUT=30s

# Rate Limiting
RATE_LIMIT=10.0
RATE_BURST=20

# File Upload Configuration
MAX_FILE_SIZE=10485760
ALLOWED_TYPES=image/jpeg,image/png,image/webp
UPLOAD_DIR=./uploads
UPLOAD_PATH=/app/uploads
TEMP_DIR=./temp
CLEANUP_AFTER=3600

# Model Configuration
MODEL_PATH=./models
MODEL_VERSION=latest
MODEL_UPDATE_URL=
MODEL_CACHE_PATH=./cache/models
MAX_MODELS=3
MODEL_LOAD_TIMEOUT=60

# DigitalOcean Spaces Configuration
SPACES_ENDPOINT=nyc3.digitaloceanspaces.com
SPACES_BUCKET=ml-models-production
SPACES_ACCESS_KEY=your_spaces_access_key
SPACES_SECRET_KEY=your_spaces_secret_key
SPACES_REGION=nyc3

# Database Configuration
DATABASE_URL=postgresql://username:password@localhost:5432/image_recognition?sslmode=require
REDIS_URL=redis://localhost:6379

# Security
JWT_SECRET=your_jwt_secret_key_here
API_KEY=your_api_key_here

# CORS Configuration
CORS_ALLOWED_ORIGINS=*
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=*
CORS_EXPOSED_HEADERS=
CORS_ALLOW_CREDENTIALS=false
CORS_MAX_AGE=86400

# Logging Configuration
LOG_LEVEL=info
LOG_OUTPUT=stdout
LOG_FILE=

# External Services
SLACK_WEBHOOK=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# DigitalOcean API
DIGITALOCEAN_ACCESS_TOKEN=your_digitalocean_api_token

# Container Registry
REGISTRY_NAME=your-digitalocean-registry-name

# Kubernetes Clusters
DOKS_CLUSTER_NAME_STAGING=image-recognition-staging
DOKS_CLUSTER_NAME_PRODUCTION=image-recognition-production

# Load Balancer Tags
LOAD_BALANCER_TAG_STAGING=image-recognition-lb-staging
LOAD_BALANCER_TAG_PRODUCTION=image-recognition-lb-production

# Monitoring and Alerting
PROMETHEUS_ENDPOINT=http://prometheus:9090
GRAFANA_ENDPOINT=http://grafana:3000

# External Model Repository (for production)
# MODEL_UPDATE_URL=https://github.com/your-org/ml-models/releases/latest
# MODEL_REGISTRY_TOKEN=your_github_token